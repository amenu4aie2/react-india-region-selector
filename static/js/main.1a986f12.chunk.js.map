{"version":3,"sources":["MapChart.js","StateChart.js","MapDialog.js","AreaSelector.js","App.js","index.js"],"names":["MapChart","setTooltipContent","setStateName","setShowDistrict","data-tip","projection","width","height","projectionConfig","scale","zoom","center","geography","india","geographies","map","geo","key","rsmKey","onMouseEnter","ST_NM","properties","onMouseLeave","onClick","style","default","fill","outline","hover","pressed","StateChart","geoURL","setDistrictName","selectedState","centerMap","scaleMap","andamannicobar","andhrapradesh","arunachalpradesh","assam","bihar","chhattisgarh","delhi","goa","gujarat","haryana","himachalpradesh","jammukashmir","jharkhand","karnataka","kerala","lakshadweep","madhyapradesh","maharashtra","manipur","meghalaya","mizoram","nagaland","odisha","punjab","rajasthan","sikkim","tamilnadu","telangana","tripura","uttarakhand","uttarpradesh","westbengal","district","useStyles","makeStyles","theme","appBar","position","backgroundColor","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","Slide","direction","MapDialog","classes","useState","contentD","setContentD","DTName","setDTName","Dialog","fullScreen","TransitionComponent","open","show","onClose","closeModal","AppBar","className","Toolbar","IconButton","edge","color","aria-label","Typography","variant","CssBaseline","Container","maxWidth","border","StateName","AreaSelector","content","setContent","STName","setSTName","setShow","Fragment","App","ReactDOM","render","document","getElementById"],"mappings":"yhziJAyDeA,EA/CE,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,kBAAmBC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACjD,OACE,oCACE,kBAAC,gBAAD,CAAgBC,WAAS,GAAGC,WAAW,cAAcC,MAAO,IAAKC,OAAQ,IAAKC,iBAAkB,CAAEC,MAAO,MACvG,kBAAC,gBAAD,CAAeC,KAAM,EAAGC,OAAQ,CAAC,GAAG,KAClC,kBAAC,cAAD,CAAaC,UAAWC,IACrB,qBAAGC,YACUC,KAAI,SAAAC,GAAG,OACjB,kBAAC,YAAD,CACEC,IAAKD,EAAIE,OACTN,UAAWI,EACXG,aAAc,WAAO,IACXC,EAAUJ,EAAIK,WAAdD,MACRnB,EAAkB,GAAD,OAAImB,KAEvBE,aAAc,WACZrB,EAAkB,KAEpBsB,QAAW,WAAO,IACRH,EAAUJ,EAAIK,WAAdD,MACRlB,EAAa,GAAD,OAAIkB,IAChBjB,GAAgB,IAElBqB,MAAO,CACLC,QAAS,CACPC,KAAM,UACNC,QAAS,QAEXC,MAAO,CACLF,KAAM,cACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,UACNC,QAAS,qB,mWCiLlBG,GApLI,SAAC,GAA2D,IACvEC,EADc9B,EAAwD,EAAxDA,kBAAmB+B,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cAGlDC,EAAY,CAAC,GAAI,IACjBC,EAAW,IAmIf,MAlIsB,6BAAlBF,GACAF,EAASK,EACTD,EAAW,IACXD,EAAY,CAAC,GAAG,KACS,mBAAlBD,GACPF,EAASM,EACTF,EAAW,IACXD,EAAY,CAAC,GAAG,KACS,sBAAlBD,GACPF,EAASO,EACTH,EAAW,KACXD,EAAY,CAAC,KAAK,KACO,UAAlBD,GACPF,EAASQ,EACTJ,EAAW,KACXD,EAAY,CAAC,KAAK,KACO,UAAlBD,GACPF,EAASS,EACTL,EAAW,KACXD,EAAY,CAAC,KAAK,KACO,iBAAlBD,GACPF,EAASU,EACTN,EAAW,KACXD,EAAY,CAAC,GAAG,KACS,iBAAlBD,GACPF,EAASW,EACTP,EAAW,KACXD,EAAY,CAAC,MAAM,OACM,QAAlBD,GACPF,EAASY,EACTR,EAAW,IACXD,EAAY,CAAC,GAAG,QACS,YAAlBD,GACPF,EAASa,EACTT,EAAW,IACXD,EAAY,CAAC,KAAK,KACO,YAAlBD,GACPF,EAASc,EACTV,EAAW,KACXD,EAAY,CAAC,GAAG,KACS,qBAAlBD,GACPF,EAASe,EACTX,EAAW,IACXD,EAAY,CAAC,KAAK,OACO,oBAAlBD,GACPF,EAASgB,EACTZ,EAAW,IACXD,EAAY,CAAC,KAAK,KACO,cAAlBD,GACPF,EAASiB,EACTb,EAAW,KACXD,EAAY,CAAC,KAAK,OACO,cAAlBD,GACPF,EAASkB,EACTd,EAAW,KACXD,EAAY,CAAC,KAAK,KACO,WAAlBD,GACPF,EAASmB,EACTf,EAAW,KACXD,EAAY,CAAC,GAAG,OACS,gBAAlBD,GACPF,EAASoB,EACThB,EAAW,KACXD,EAAY,CAAC,GAAG,KACS,mBAAlBD,GACPF,EAASqB,EACTjB,EAAW,IACXD,EAAY,CAAC,KAAK,KACO,gBAAlBD,GACPF,EAASsB,EACTlB,EAAW,IACXD,EAAY,CAAC,KAAK,OACO,YAAlBD,GACPF,EAASuB,EACTnB,EAAW,KACXD,EAAY,CAAC,KAAK,OACO,cAAlBD,GACPF,EAASwB,EACTpB,EAAW,KACXD,EAAY,CAAC,KAAK,OACO,YAAlBD,GACPF,EAASyB,EACTrB,EAAW,KACXD,EAAY,CAAC,KAAK,QACO,aAAlBD,GACPF,EAAS0B,EACTtB,EAAW,IACXD,EAAY,CAAC,KAAK,OACO,WAAlBD,GACPF,EAAS2B,EACTvB,EAAW,KACXD,EAAY,CAAC,KAAK,QACO,WAAlBD,GACPF,EAAS4B,EACTxB,EAAW,KACXD,EAAY,CAAC,MAAM,OACM,cAAlBD,GACPF,EAAS6B,EACTzB,EAAW,IACXD,EAAY,CAAC,GAAG,OACS,WAAlBD,GACPF,EAAS8B,EACT1B,EAAW,IACXD,EAAY,CAAC,MAAM,OACM,eAAlBD,GACPF,EAAS+B,EACT3B,EAAW,KACXD,EAAY,CAAC,MAAM,OACM,cAAlBD,GACPF,EAASgC,EACT5B,EAAW,KACXD,EAAY,CAAC,KAAK,OACO,YAAlBD,GACPF,EAASiC,EACT7B,EAAW,KACXD,EAAY,CAAC,MAAM,QACM,gBAAlBD,GACPF,EAASkC,EACT9B,EAAW,IACXD,EAAY,CAAC,KAAK,KACO,kBAAlBD,GACPF,EAASmC,EACT/B,EAAW,IACXD,EAAY,CAAC,KAAK,KACO,gBAAlBD,IACPF,EAASoC,GACThC,EAAW,KACXD,EAAY,CAAC,KAAK,OAIpB,oCACE,kBAAC,gBAAD,CAAgB9B,WAAS,GAAGC,WAAW,cAAcC,MAAO,IAAKC,OAAQ,IAAKC,iBAAkB,CAAEC,MAAO0B,IACvG,kBAAC,gBAAD,CAAezB,KAxIP,EAwIsBC,OAAQuB,GACpC,kBAAC,cAAD,CAAatB,UAAWmB,IACrB,qBAAGjB,YACUC,KAAI,SAAAC,GAAG,OACjB,kBAAC,YAAD,CACEC,IAAKD,EAAIE,OACTN,UAAWI,EACXG,aAAc,WAAO,IACXiD,EAAapD,EAAIK,WAAjB+C,SACRnE,EAAkB,GAAD,OAAImE,KAEvB9C,aAAc,WACZrB,EAAkB,KAEpBsB,QAAW,WAAO,IACR6C,EAAapD,EAAIK,WAAjB+C,SACRpC,EAAgB,GAAD,OAAIoC,KAErB5C,MAAO,CACLC,QAAS,CACPC,KAAM,UACNC,QAAS,QAEXC,MAAO,CACLF,KAAM,cACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,UACNC,QAAS,qBClM3B0C,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,OAAQ,CACNC,SAAU,WACVC,gBAAiB,WAEnBC,MAAO,CACLC,WAAYL,EAAMM,QAAQ,GAC1BC,KAAM,OAINC,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAqChCI,GAlCG,SAAAJ,GACd,IAAMK,EAAUlB,KADO,EAESmB,mBAAS,IAFlB,mBAEhBC,EAFgB,KAENC,EAFM,OAGKF,mBAAS,IAHd,mBAGhBG,EAHgB,KAGRC,EAHQ,KAIvB,OACI,kBAACC,EAAA,EAAD,CAAQC,YAAU,EAACC,oBAAqBhB,GAAYiB,KAAMd,EAAMe,KAAMC,QAAShB,EAAMiB,WAAY3E,MAAO,CAAEkD,gBAAiB,qBACvH,kBAAC0B,EAAA,EAAD,CAAQC,UAAWd,EAAQf,QAC3B,kBAAC8B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUlF,QAAS2D,EAAMiB,WAAYO,aAAW,SAC/E,kBAAC,IAAD,QAEEf,GACE,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWd,EAAQZ,OAA5C,wBAIHgB,GACG,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWd,EAAQZ,OAA5C,sBACwBgB,KAKhC,kBAACkB,EAAA,EAAD,MACA,yBAAKrF,MAAO,CAAEjB,OAAQ,SAAUmE,gBAAiB,UAC7C,kBAACoC,EAAA,EAAD,CAAWC,SAAS,KAAKvF,MAAO,CAAEwF,OAAQ,kBAAmBtC,gBAAiB,UAC1E,kBAAC,GAAD,CAAYzE,kBAAmByF,EAAa1D,gBAAiB4D,EAAW3D,cAAeiD,EAAM+B,YAC7F,kBAAC,IAAD,KAAexB,OCjCpByB,GAlBM,WAAO,IAAD,EACO1B,mBAAS,IADhB,mBAChB2B,EADgB,KACPC,EADO,OAEK5B,mBAAS,IAFd,mBAEhB6B,EAFgB,KAERC,EAFQ,OAGC9B,oBAAS,GAHV,mBAGhBS,EAHgB,KAGVsB,EAHU,KAOvB,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,GAAD,CAAWvB,KAAMA,EAAMgB,UAAWI,EAAQlB,WAJ9B,kBAAMoB,GAAQ,MAK1B,yBAAK/F,MAAO,CAAEkD,gBAAiB,UAC3B,kBAAC,EAAD,CAAUzE,kBAAmBmH,EAAYlH,aAAcoH,EAAWnH,gBAAiBoH,IACnF,kBAAC,IAAD,KAAeJ,MCShBM,GAlBH,WACV,OACE,kBAAC,IAAMD,SAAP,KACE,kBAACpB,EAAA,EAAD,CAAQ5E,MAAO,CAAEiD,SAAU,WAAYC,gBAAiB,YACtD,kBAAC4B,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKpF,MAAO,CAAEoD,WAAY,MAAOE,KAAM,IAA3D,WAKJ,kBAAC+B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAAC,GAAD,SCfVW,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,Y","file":"static/js/main.1a986f12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup\r\n} from \"react-simple-maps\";\r\n\r\nimport india from './topojsons/india.json';\r\n\r\nconst MapChart = ({ setTooltipContent, setStateName, setShowDistrict }) => {\r\n    return (\r\n      <>\r\n        <ComposableMap  data-tip=\"\" projection=\"geoMercator\" width={150} height={150} projectionConfig={{ scale: 220 }}>\r\n          <ZoomableGroup zoom={1} center={[80,22]}>\r\n            <Geographies geography={india}>\r\n              {({ geographies }) =>\r\n                geographies.map(geo => (\r\n                  <Geography  \r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { ST_NM } = geo.properties;\r\n                      setTooltipContent(`${ST_NM}`);\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick = {() => {\r\n                      const { ST_NM } = geo.properties;\r\n                      setStateName(`${ST_NM}`);\r\n                      setShowDistrict(true);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill: \"#D6D6DA\",\r\n                        outline: \"none\"\r\n                      },\r\n                      hover: {\r\n                        fill: \"forestgreen\",\r\n                        outline: \"none\"\r\n                      },\r\n                      pressed: {\r\n                        fill: \"#2E8B57\",\r\n                        outline: \"none\"\r\n                      }\r\n                    }}\r\n                  />\r\n                ))\r\n              }\r\n            </Geographies>\r\n          </ZoomableGroup>\r\n        </ComposableMap>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default MapChart;","import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup\r\n} from \"react-simple-maps\";\r\n\r\nimport andamannicobar from './topojsons/states/andamannicobar.json';\r\nimport andhrapradesh from './topojsons/states/andhrapradesh.json';\r\nimport arunachalpradesh from './topojsons/states/arunachalpradesh.json';\r\nimport assam from './topojsons/states/assam.json';\r\nimport bihar from './topojsons/states/bihar.json';\r\nimport chhattisgarh from './topojsons/states/chhattisgarh.json';\r\nimport delhi from './topojsons/states/delhi.json';\r\nimport goa from './topojsons/states/goa.json';\r\nimport gujarat from './topojsons/states/gujarat.json';\r\nimport haryana from './topojsons/states/haryana.json';\r\nimport himachalpradesh from './topojsons/states/himachalpradesh.json';\r\nimport jammukashmir from './topojsons/states/jammukashmir.json';\r\nimport jharkhand from './topojsons/states/jharkhand.json';\r\nimport karnataka from './topojsons/states/karnataka.json';\r\nimport kerala from './topojsons/states/kerala.json';\r\nimport lakshadweep from './topojsons/states/lakshadweep.json';\r\nimport madhyapradesh from './topojsons/states/madhyapradesh.json';\r\nimport maharashtra from './topojsons/states/maharashtra.json';\r\nimport manipur from './topojsons/states/manipur.json';\r\nimport meghalaya from './topojsons/states/meghalaya.json';\r\nimport mizoram from './topojsons/states/mizoram.json';\r\nimport nagaland from './topojsons/states/nagaland.json';\r\nimport odisha from './topojsons/states/odisha.json';\r\nimport punjab from './topojsons/states/punjab.json';\r\nimport rajasthan from './topojsons/states/rajasthan.json';\r\nimport sikkim from './topojsons/states/sikkim.json';\r\nimport tamilnadu from './topojsons/states/tamilnadu.json';\r\nimport telangana from './topojsons/states/telangana.json';\r\nimport tripura from './topojsons/states/tripura.json';\r\nimport uttarakhand from './topojsons/states/uttarakhand.json';\r\nimport uttarpradesh from './topojsons/states/uttarpradesh.json';\r\nimport westbengal from './topojsons/states/westbengal.json';\r\n\r\nconst StateChart = ({ setTooltipContent, setDistrictName, selectedState }) => {\r\n    let geoURL;\r\n    let zoomMap = 1;\r\n    let centerMap = [80, 22];\r\n    let scaleMap = 400;\r\n    if (selectedState === 'Andaman & Nicobar Island') {\r\n        geoURL = andamannicobar;\r\n        scaleMap = 1000;\r\n        centerMap = [93,10];\r\n    } else if (selectedState === 'Andhra Pradesh') {\r\n        geoURL = andhrapradesh;\r\n        scaleMap = 800;\r\n        centerMap = [80,17];\r\n    } else if (selectedState === 'Arunachal Pradesh') {\r\n        geoURL = arunachalpradesh;\r\n        scaleMap = 1200;\r\n        centerMap = [94.5,28];\r\n    } else if (selectedState === 'Assam') {\r\n        geoURL = assam;\r\n        scaleMap = 1350;\r\n        centerMap = [92.9,26];\r\n    } else if (selectedState === 'Bihar') {\r\n        geoURL = bihar;\r\n        scaleMap = 1300;\r\n        centerMap = [85.5,26];\r\n    } else if (selectedState === 'Chhattisgarh') {\r\n        geoURL = chhattisgarh;\r\n        scaleMap = 1100;\r\n        centerMap = [82,21];\r\n    } else if (selectedState === 'NCT of Delhi') {\r\n        geoURL = delhi;\r\n        scaleMap = 11000;\r\n        centerMap = [77.05,28.6];\r\n    } else if (selectedState === 'Goa') {\r\n        geoURL = goa;\r\n        scaleMap = 6000;\r\n        centerMap = [74,15.25];\r\n    } else if (selectedState === 'Gujarat') {\r\n        geoURL = gujarat;\r\n        scaleMap = 1000;\r\n        centerMap = [71.5,22];\r\n    } else if (selectedState === 'Haryana') {\r\n        geoURL = haryana;\r\n        scaleMap = 1700;\r\n        centerMap = [76,29];\r\n    } else if (selectedState === 'Himachal Pradesh') {\r\n        geoURL = himachalpradesh;\r\n        scaleMap = 2000;\r\n        centerMap = [77.4,31.8];\r\n    } else if (selectedState === 'Jammu & Kashmir') {\r\n        geoURL = jammukashmir;\r\n        scaleMap = 1000;\r\n        centerMap = [76.3,35];\r\n    } else if (selectedState === 'Jharkhand') {\r\n        geoURL = jharkhand;\r\n        scaleMap = 1700;\r\n        centerMap = [85.7,23.6];\r\n    } else if (selectedState === 'Karnataka') {\r\n        geoURL = karnataka;\r\n        scaleMap = 1100;\r\n        centerMap = [76.5,15];\r\n    } else if (selectedState === 'Kerala') {\r\n        geoURL = kerala;\r\n        scaleMap = 1800;\r\n        centerMap = [76,10.5];\r\n    } else if (selectedState === 'Lakshadweep') {\r\n        geoURL = lakshadweep;\r\n        scaleMap = 2300;\r\n        centerMap = [73,11];\r\n    } else if (selectedState === 'Madhya Pradesh') {\r\n        geoURL = madhyapradesh;\r\n        scaleMap = 900;\r\n        centerMap = [78.5,24];\r\n    } else if (selectedState === 'Maharashtra') {\r\n        geoURL = maharashtra;\r\n        scaleMap = 1000;\r\n        centerMap = [76.8,19.3];\r\n    } else if (selectedState === 'Manipur') {\r\n        geoURL = manipur;\r\n        scaleMap = 3400;\r\n        centerMap = [93.8,24.7];\r\n    } else if (selectedState === 'Meghalaya') {\r\n        geoURL = meghalaya;\r\n        scaleMap = 2500;\r\n        centerMap = [91.3,25.4];\r\n    } else if (selectedState === 'Mizoram') {\r\n        geoURL = mizoram;\r\n        scaleMap = 2900;\r\n        centerMap = [92.8,23.25];\r\n    } else if (selectedState === 'Nagaland') {\r\n        geoURL = nagaland;\r\n        scaleMap = 4000;\r\n        centerMap = [94.3,26.1];\r\n    } else if (selectedState === 'Odisha') {\r\n        geoURL = odisha;\r\n        scaleMap = 1300;\r\n        centerMap = [84.4,20.25];\r\n    } else if (selectedState === 'Punjab') {\r\n        geoURL = punjab;\r\n        scaleMap = 2300;\r\n        centerMap = [75.35,31.1];\r\n    } else if (selectedState === 'Rajasthan') {\r\n        geoURL = rajasthan;\r\n        scaleMap = 900;\r\n        centerMap = [74,26.3];\r\n    } else if (selectedState === 'Sikkim') {\r\n        geoURL = sikkim;\r\n        scaleMap = 6000;\r\n        centerMap = [88.45,27.6];\r\n    } else if (selectedState === 'Tamil Nadu') {\r\n        geoURL = tamilnadu;\r\n        scaleMap = 1300;\r\n        centerMap = [78.25,10.8];\r\n    } else if (selectedState === 'Telangana') {\r\n        geoURL = telangana;\r\n        scaleMap = 1800;\r\n        centerMap = [79.5,17.9];\r\n    } else if (selectedState === 'Tripura') {\r\n        geoURL = tripura;\r\n        scaleMap = 4500;\r\n        centerMap = [91.75,23.75];\r\n    } else if (selectedState === 'Uttarakhand') {\r\n        geoURL = uttarakhand;\r\n        scaleMap = 2000;\r\n        centerMap = [79.3,30];\r\n    } else if (selectedState === 'Uttar Pradesh') {\r\n        geoURL = uttarpradesh;\r\n        scaleMap = 1000;\r\n        centerMap = [80.8,27];\r\n    } else if (selectedState === 'West Bengal') {\r\n        geoURL = westbengal;\r\n        scaleMap = 1200;\r\n        centerMap = [87.7,24.2];\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ComposableMap  data-tip=\"\" projection=\"geoMercator\" width={150} height={150} projectionConfig={{ scale: scaleMap }}>\r\n          <ZoomableGroup zoom={zoomMap} center={centerMap}>\r\n            <Geographies geography={geoURL}>\r\n              {({ geographies }) =>\r\n                geographies.map(geo => (\r\n                  <Geography  \r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { district } = geo.properties;\r\n                      setTooltipContent(`${district}`);\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick = {() => {\r\n                      const { district } = geo.properties;\r\n                      setDistrictName(`${district}`);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill: \"#D6D6DA\",\r\n                        outline: \"none\"\r\n                      },\r\n                      hover: {\r\n                        fill: \"forestgreen\",\r\n                        outline: \"none\"\r\n                      },\r\n                      pressed: {\r\n                        fill: \"#2E8B57\",\r\n                        outline: \"none\"\r\n                      }\r\n                    }}\r\n                  />\r\n                ))\r\n              }\r\n            </Geographies>\r\n          </ZoomableGroup>\r\n        </ComposableMap>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default StateChart;","import React, { useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport StateChart from './StateChart';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n      position: 'relative',\r\n      backgroundColor: '#509609',\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst MapDialog = props => {\r\n    const classes = useStyles();\r\n    const [contentD, setContentD] = useState(\"\");\r\n    const [DTName, setDTName] = useState(\"\");\r\n    return (\r\n        <Dialog fullScreen TransitionComponent={Transition} open={props.show} onClose={props.closeModal} style={{ backgroundColor: 'black !important' }}>\r\n            <AppBar className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" onClick={props.closeModal} aria-label=\"close\">\r\n                <CloseIcon />\r\n                </IconButton>\r\n                {!DTName && (\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        No district selected\r\n                    </Typography>\r\n                )}   \r\n                {DTName && (\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Selected District: {DTName}\r\n                    </Typography>\r\n                )}   \r\n            </Toolbar>\r\n            </AppBar>\r\n            <CssBaseline />\r\n            <div style={{ height: '2000px', backgroundColor: 'black' }}>\r\n                <Container maxWidth=\"md\" style={{ border: '1px solid black', backgroundColor: 'black' }}>\r\n                    <StateChart setTooltipContent={setContentD} setDistrictName={setDTName} selectedState={props.StateName} />\r\n                    <ReactTooltip>{contentD}</ReactTooltip>\r\n                </Container>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default MapDialog;\r\n","import React, { useState } from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport MapChart from './MapChart';\r\nimport MapDialog from './MapDialog';\r\n\r\nconst AreaSelector = () => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [STName, setSTName] = useState(\"\")\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MapDialog show={show} StateName={STName} closeModal={handleClose} />\r\n            <div style={{ backgroundColor: 'black' }}>\r\n                <MapChart setTooltipContent={setContent} setStateName={setSTName} setShowDistrict={setShow} />\r\n                <ReactTooltip>{content}</ReactTooltip>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AreaSelector;","import React from 'react';\r\nimport AreaSelector from './AreaSelector';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar style={{ position: 'relative', backgroundColor: '#509609' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" style={{ marginLeft: '2px', flex: 1 }}>\r\n              India\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n          <AreaSelector />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}